python manage.py shell

from news.models import *


# Создать двух пользователей (с помощью метода User.objects.create_user('username')).
U1 = User.objects.create_user('Вася')
U2 = User.objects.create_user('Петя')


# Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(user_author=U1)
Author.objects.create(user_author=U2)

# Добавить 4 категории в модель Category.
Category.objects.create(name='Охота и рыбалки')
Category.objects.create(name='Дом и сад')
Category.objects.create(name='IT')
Category.objects.create(name='Оффтоп')


# Добавить 2 статьи и 1 новость.
author1 = Author.objects.get(id=1)
author2 = Author.objects.get(id=2)
Post.objects.create(author=author1, category_type='NW', title='some title 1', text='some big text 1')
Post.objects.create(author=author1, category_type='AR', title='some title 2', text='some big text 2')
Post.objects.create(author=author2, category_type='AR', title='some title 3', text='some big text 3')


# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=1).post_category.add(Category.objects.get(id=1))
Post.objects.get(id=1).post_category.add(Category.objects.get(id=2))
Post.objects.get(id=2).post_category.add(Category.objects.get(id=3))
Post.objects.get(id=3).post_category.add(Category.objects.get(id=4))

# Создать как минимум 4 комментария к разным объектам модели Post
# (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).user_author, text='any text 1 by author')
Comment.objects.create(comment_post=Post.objects.get(id=2), comment_user=Author.objects.get(id=2).user_author, text='any text 2 by author')
Comment.objects.create(comment_post=Post.objects.get(id=3), comment_user=Author.objects.get(id=1).user_author, text='any text 3 by author')
Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=2).user_author, text='any text 4 by author')

# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
import random
Com = Comment.objects.all()
Pos = Post.objects.all()
for i in Com:
    R = random.random()
    if R > 0.5:
        i.like()
    else:
        i.dislike()

for i in Pos:
    R = random.random()
    if R > 0.5:
        i.like()
    else:
        i.dislike()

# Обновить рейтинги пользователей.
Author.objects.get(id=1).update_rating()
Author.objects.get(id=2).update_rating()
Author.objects.get(id=1).rating_author
Author.objects.get(id=2).rating_author

# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
a = Author.objects.order_by('-rating_author')[:1]
for i in a:
    i.user_author.username
    i.rating_author

# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
p = Post.objects.order_by('-rating')[:1]
for i in p:
    i.date_creation

# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
for i in p:
    i.title
    i.text
    i.author


